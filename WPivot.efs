
var aFPArray = new Array();
var _init = true;
var _currentDay = 0;
var pivots;
var curHi, curLo;
var DayOfWeek;
var lineNames = new Array("R4", "R3", "R2", "R1", "PP", "S1", "S2", "S3", "S4");
var lastDOW = 7;

function preMain() {

    setPriceStudy(true);
    setShowCursorLabel(true);
    setComputeOnClose(true);
    setShowTitleParameters(false);

    var x = 0;
    aFPArray[x] = new FunctionParameter( "Labels", FunctionParameter.BOOLEAN);
    with( aFPArray[x++] ) {
        setDefault(true);
        setName("Show Labels");
    }
    aFPArray[x] = new FunctionParameter( "sLabelPos", FunctionParameter.STRING);
    with( aFPArray[x++] ) {
        addOption("Left");
        addOption("Right");
        addOption("RightEdge");
        setDefault("Left");
        setName("Label Position");
    }
    aFPArray[x] = new FunctionParameter( "Name", FunctionParameter.STRING);
    with( aFPArray[x++] ) {
        setDefault("WeeklyPivot");
    }
    aFPArray[x] = new FunctionParameter("rColor", FunctionParameter.COLOR);
    with( aFPArray[x++] ) {
        setDefault(Color.red);
        setName("Resistance Color");
    }
    aFPArray[x] = new FunctionParameter("rThick", FunctionParameter.NUMBER);
    with( aFPArray[x++] ) {
        setLowerLimit( 0 );
        setUpperLimit( 20 );
        setDefault(2);
        setName("Resistance Thickness");
    }
    aFPArray[x] = new FunctionParameter( "rStyle", FunctionParameter.STRING);
    with( aFPArray[x++] ) {
        addOption("PS_SOLID");
        addOption("PS_DOT");
        addOption("PS_DASH");
        addOption("PS_DASHDOT");
        addOption("PS_DASHDOTDOT");
        setDefault( "PS_DASH" );
        setName("Resistance Style");
    }
    aFPArray[x] = new FunctionParameter("pColor", FunctionParameter.COLOR);
    with( aFPArray[x++] ) {
        setDefault(Color.blue);
        setName("Pivot Color");
    }
    aFPArray[x] = new FunctionParameter("pThick", FunctionParameter.NUMBER);
    with( aFPArray[x++] ) {
        setLowerLimit( 0 );
        setUpperLimit( 20 );
        setDefault(2);
        setName("Pivot Thickness");
    }
    aFPArray[x] = new FunctionParameter( "pStyle", FunctionParameter.STRING);
    with( aFPArray[x++] ) {
        addOption("PS_SOLID");
        addOption("PS_DOT");
        addOption("PS_DASH");
        addOption("PS_DASHDOT");
        addOption("PS_DASHDOTDOT");
        setDefault( "PS_DASH" );
        setName("Pivot Style");
    }
    aFPArray[x] = new FunctionParameter("sColor", FunctionParameter.COLOR);
    with( aFPArray[x++] ) {
        setDefault(Color.lime);
        setName("Support Color");
    }
    aFPArray[x] = new FunctionParameter("sThick", FunctionParameter.NUMBER);
    with( aFPArray[x++] ) {
        setLowerLimit( 0 );
        setUpperLimit( 20 );
        setDefault(2);
        setName("Support Thickness");
    }
    aFPArray[x] = new FunctionParameter( "sStyle", FunctionParameter.STRING);
    with( aFPArray[x++] ) {
        addOption("PS_SOLID");
        addOption("PS_DOT");
        addOption("PS_DASH");
        addOption("PS_DASHDOT");
        addOption("PS_DASHDOTDOT");
        setDefault( "PS_DASH" );
        setName("Support Style");
    }

    _init = true;
}


function main(
Labels, sLabelPos, Name,
rColor, rThick, rStyle,
pColor, pThick, pStyle,
sColor, sThick, sStyle
) {

    if ( getBarState() == BARSTATE_ALLBARS ) {
        return null;
    }

	//script only works in intraday time frames
	if ( isDaily() || isWeekly() || isMonthly() ) {
        return;
    }

    if(_init)
    {
        setStudyTitle(Name);

        for(i=0; i<4; i++) {
            setCursorLabelName(lineNames[i], i);
            setDefaultBarStyle(eval(eval(rStyle)), i);
            setDefaultBarThickness(rThick, i);
            setDefaultBarFgColor(rColor, i);
        }
        setCursorLabelName(lineNames[i], i);
        setDefaultBarStyle(eval(eval(pStyle)), i);
        setDefaultBarThickness(pThick, i);
        setDefaultBarFgColor(pColor, i);
        for(i=5; i<9; i++) {
            setCursorLabelName(lineNames[i], i);
            setDefaultBarStyle(eval(eval(sStyle)), i);
            setDefaultBarThickness(sThick, i);
            setDefaultBarFgColor(sColor, i);
        }

        _init = false;
    }
/*
dateObj.getDay returns these values
0 = Sunday
1 = Monday
2 = Tuesday
3 = Wednesday
4 = Thursday
5 = Friday
6= Saturday
*/

    if(_currentDay != getDay()) {
        // If currentDOW < lastDOW -> i.e. Sunday so start collecting new data
        var currentDOW = getValue("time").getDay();
        if(lastDOW > currentDOW) {
            // Calculate new pivots
            pivots = GetPivots(curHi, curLo, close(-1));
            DrawLabels(Labels, sLabelPos, pivots);
            // set high and low trackers to current high and low
            curHi = high(0);
            curLo = low(0);
        }
        lastDOW = currentDOW;
        _currentDay = getDay(0);
    }

    curHi = Math.max(curHi, high(0));
    curLo = Math.min(curLo, low(0));
    return pivots;
}

function GetPivots(pHigh, pLow, pClose) {
        var pivot = 0;
        pivot = (pHigh + pLow + pClose) / 3;
        var range = pHigh - pLow;

        // calculate and draw R1, R2, R3, R4
        var r1 = 2 * pivot - pLow;
        var r2 = pivot + range;
        var r3 = pivot + range * 2;
        var r4 = pivot + range * 3;

        // calculate and draw S1, S2, S3, S4
        var s1 = 2 * pivot - pHigh;
        var s2 = pivot - range;
        var s3 = pivot - range * 2;
        var s4 = pivot - range * 3;
        return new Array(r4, r3, r2, r1, pivot, s1, s2, s3, s4);
}

var _names = new Array("R4", "R3", "R2", "R1", "PP", "S1", "S2", "S3", "S4");

function DrawLabels(Labels, sLabelPos, pPivots) {
    if (Labels == "true" || Labels == true)
    {
        var sTextFlags, nTextX;
        if (sLabelPos == "Right") {
            sTextFlags = "Text.LEFT|Text.ONTOP|Text.VCENTER|Text.Bold|Text.FRAME";
            nTextX = 2;
        } else if (sLabelPos == "RightEdge") {
            sTextFlags = "Text.RIGHT|Text.ONTOP|Text.VCENTER|Text.Bold|Text.FRAME";
            nTextX = 2;
        } else {
            sTextFlags = "Text.RELATIVETOLEFT|Text.ONTOP|Text.VCENTER|Text.Bold|Text.FRAME";
            nTextX = 0;
        }

        for(i=0; i<pPivots.length, i<_names.length; i++) {
            drawTextAbsolute(nTextX, pPivots[i], _names[i],
                Color.white, Color.blue, eval(sTextFlags), null, 10, _names[i] + i);
        }
    }
}
