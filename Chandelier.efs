
var aFPArray = new Array();
var vATR = null;

function preMain() {

    setShowTitleParameters(false);

    setPriceStudy(true);
    setStudyTitle("Chandelier");
    setCursorLabelName("Stop", 0);
    setShowCursorLabel(true);
    
	var x=0; 
	aFPArray[x] = new FunctionParameter( "lookback", FunctionParameter.NUMBER);
	with( aFPArray[x] ) {
        setName("Lookback period");
		setLowerLimit(1);
		setDefault(22);
	}  
	x++; 
	aFPArray[x] = new FunctionParameter( "coef", FunctionParameter.NUMBER);
	with( aFPArray[x] ) {
        setName("Coefficient/multiplication factor");
		setLowerLimit(0);
		setDefault(3);
	}  
	x++;
    aFPArray[x] = new FunctionParameter("LineThick", FunctionParameter.NUMBER);
    with( aFPArray[x] ) {
        setName("Line Thickness");
        setDefault(1);
	}
	x++;
    aFPArray[x] = new FunctionParameter("ATRLen", FunctionParameter.NUMBER);
    with( aFPArray[x] ) {
        setName("ATR Length");
        setDefault(22);
	}
	x++;
	aFPArray[x] = new FunctionParameter("LineColor", FunctionParameter.COLOR);
    with( aFPArray[x] ) {
        setName("Line Color");
        setDefault(Color.blue);
	}
	x++;
	aFPArray[x] = new FunctionParameter("LongStop", FunctionParameter.BOOLEAN);
	with( aFPArray[x] ) {
        setName("Long Stop");
        setDefault(true);
	}
	x++;
	aFPArray[x] = new FunctionParameter("LockStops", FunctionParameter.BOOLEAN);
	with( aFPArray[x] ) {
        setName("Lock Stops");
        setDefault(true);
	}
	x++;
	
    _init = true;
}

var _init = true;
var stop, prevStop;

function main(lookback, coef, LineThick, LineColor, LongStop, LockStops, ATRLen) {

    if(LongStop == "false") LongStop = false;
    if(LongStop == "true") LongStop = true;
    if(LockStops == "false") LockStops = false;
    if(LockStops == "true") LockStops = true;
    if(_init)
    {
        _init = false;
        vATR = new ATRStudy(ATRLen);
            
        if(LongStop) {
            stop = low(0);
            setCursorLabelName("Chandelier Stop", 0);
            setStudyTitle("Chandelier Long Stop");
        }
        else {
            stop = high(0);
            setCursorLabelName("Chandelier Stop", 0);
            setStudyTitle("Chandelier Short Stop");
        }
        setDefaultBarThickness(LineThick, 0);
        setDefaultBarFgColor(LineColor, 0);
    }

	if ( getBarState() == BARSTATE_NEWBAR ) 
    {
        prevStop = stop;
    }

    if(LongStop) {
        var hh = high(0, -lookback);
        var highestHigh = getHighestHigh(hh);
        stop = highestHigh - coef * vATR.getValue(ATRStudy.ATR);
        if(LockStops) {
            if(stop < prevStop && low(-1) > prevStop) {
                stop = prevStop;
            }
        }
    }
    else {
        var ll = low(0, -lookback);
        var lowestLow = getLowestLow(ll);
        stop = lowestLow + coef * vATR.getValue(ATRStudy.ATR);
        if(LockStops) {
            if(stop > prevStop && high(-1) < prevStop) {
                stop = prevStop;
            }
        }
    }

    return stop;
}

function getHighestHigh(aCollection) {
    if(aCollection.length < 1)
        return 0;

    var highP = aCollection[0];
    var x;
    for(x=1; x<aCollection.length; x++) {
        highP = Math.max(highP, aCollection[x]);
    }
    return highP;
}

function getLowestLow(aCollection) {
    if(aCollection.length < 1)
        return 0;

    var lowP = aCollection[0];
    var x;
    for(x=1; x<aCollection.length; x++) {
        lowP = Math.min(lowP, aCollection[x]);
    }
    return lowP;
}

